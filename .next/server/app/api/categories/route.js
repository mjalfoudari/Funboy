"use strict";(()=>{var e={};e.id=961,e.ids=[961],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9961:(e,r,o)=>{o.r(r),o.d(r,{headerHooks:()=>f,originalPathname:()=>y,patchFetch:()=>A,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>h});var t={};o.r(t),o.d(t,{GET:()=>d,dynamic:()=>l});var a=o(5419),s=o(9108),n=o(9678),i=o(8070),c=o(2269);let l="force-dynamic";async function d(e){try{let r=e.nextUrl.searchParams.get("slug");console.log(`API categories request - slug: ${r||"all"}`);let o=(await c.Z.category.findMany({where:r?{slug:r}:{},orderBy:{sortOrder:"asc"},include:{_count:{select:{products:!0}}}})).map(e=>({...e,_count:e._count||{products:0}}));return console.log(`API categories response: ${o.length} categories found ${r?`for slug '${r}'`:""}`),i.Z.json(o)}catch(e){return console.error("Error fetching categories:",e),i.Z.json({error:"Failed to fetch categories"},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/categories/route",pathname:"/api/categories",filename:"route",bundlePath:"app/api/categories/route"},resolvedPagePath:"C:\\Users\\mjalf\\OneDrive\\Documents\\Funboy\\src\\app\\api\\categories\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:m,headerHooks:f,staticGenerationBailout:h}=u,y="/api/categories/route";function A(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},2269:(e,r,o)=>{o.d(r,{Z:()=>n});let t=require("@prisma/client");async function a(){let e=new t.PrismaClient;try{let r=await e.category.count();0===r?(console.log("Seeding minimal data for production environment..."),await e.category.createMany({data:[{name:"Pool Floats",slug:"pool-floats",description:"Luxury pool floats for relaxation",sortOrder:1},{name:"Kids",slug:"kids",description:"Pool floats and toys for kids",sortOrder:2},{name:"Accessories",slug:"accessories",description:"Pool accessories and more",sortOrder:3}]}),console.log("Minimal data seeding complete")):console.log("Database already has data, skipping seed")}catch(e){console.error("Error seeding database:",e)}finally{await e.$disconnect()}}process.env.DATABASE_URL||(console.warn("DATABASE_URL not found, using in-memory SQLite database for Vercel"),process.env.VERCEL?process.env.DATABASE_URL="file::memory:?cache=shared":process.env.DATABASE_URL="file:./prisma/dev.db");let s=global.prisma||new t.PrismaClient({log:["error"]});process.env.VERCEL&&a().then(()=>console.log("Vercel database seeding complete")).catch(e=>console.error("Error seeding Vercel database:",e));let n=s}};var r=require("../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[638,206],()=>o(9961));module.exports=t})();